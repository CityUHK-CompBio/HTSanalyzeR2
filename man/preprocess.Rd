% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsca_preprocess.R, R/nwa_preprocess.R
\docType{methods}
\name{preprocess,GSCA-method}
\alias{preprocess,GSCA-method}
\alias{preprocess,NWA-method}
\title{A preprocessing method for objects of class GSCA or NWA}
\usage{
\S4method{preprocess}{GSCA}(object, species = "Dm",
  initialIDs = "FLYBASECG", keepMultipleMappings = TRUE,
  duplicateRemoverMethod = "max", orderAbsValue = FALSE, verbose = TRUE)

\S4method{preprocess}{NWA}(object, species = "Dm",
  duplicateRemoverMethod = "max", initialIDs = "FLYBASECG",
  keepMultipleMappings = TRUE, verbose = TRUE)
}
\arguments{
\item{object}{A GSCA object.}

\item{species}{A single character value specifying the species for which the
data should be read.}

\item{initialIDs}{A single character value specifying the type of initial
identifiers for input geneList}

\item{keepMultipleMappings}{A single logical value. If TRUE, the function
keeps the entries with multiple mappings (first mapping is kept). If FALSE,
the entries with multiple mappings will be discarded.}

\item{duplicateRemoverMethod}{A single character value specifying the method
to remove the duplicates. See duplicateRemover for details.}

\item{orderAbsValue}{A single logical value indicating whether the values
should be converted to absolute values and then ordered (if TRUE), or
ordered as they are (if FALSE).}

\item{verbose}{A single logical value specifying to display detailed messages
(when verbose=TRUE) or not (when verbose=FALSE)}
}
\description{
This is a generic function. When implemented as the S4 method for objects of
class GSCA or NWA, this function filters out invalid data, removes duplicated
genes, converts annotations to Entrez identifiers, etc.
}
\examples{
## Not run:
library(org.Dm.eg.db)
library(GO.db)
## load data for enrichment analyses
data(data4enrich)
## select hits
hits <- names(data4enrich)[abs(data4enrich) > 2]
## set up a list of gene set collections
GO_MF <- GOGeneSets(species="Dm", ontologies=c("MF"))
ListGSC <- list(GO_MF=GO_MF)
## create an object of class 'GSCA'
gsca <- GSCA(listOfGeneSetCollections = ListGSC, geneList = data4enrich, hits = hits)
## do preprocessing
gsca <- preprocess(gsca, species="Dm", initialIDs="FLYBASECG", keepMultipleMappings=TRUE, duplicateRemoverMethod="max", orderAbsValue=FALSE)
## print gsca
gsca
}
\seealso{
\code{\link[HTSanalyzeR2]{duplicateRemover}}, \code{\link[HTSanalyzeR2]{annotationConvertor}}
}
