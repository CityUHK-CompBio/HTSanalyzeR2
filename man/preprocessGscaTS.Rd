% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gscaTS.R
\name{preprocessGscaTS}
\alias{preprocessGscaTS}
\title{A preprocessing method for a GSCABatch object of Time-series data Gene Set Collection Analyses}
\usage{
preprocessGscaTS(object, species = "Hs", initialIDs = "SYMBOL",
  keepMultipleMappings = TRUE, duplicateRemoverMethod = "max",
  orderAbsValue = FALSE, verbose = TRUE)
}
\arguments{
\item{object}{A GSCABatch object.}

\item{species}{A single character value specifying the species of the inputs.
It supports all the species of OrgDb objects in AnnotationDbi.
The format should be an abbreviation of the organism as setted by AnnotationDbi.
For example, the commonly used ones are "Dm" ("Drosophila_melanogaster"),
"Hs" ("Homo_sapiens"), "Rn" ("Rattus_norvegicus"), "Mm" ("Mus_musculus"),
"Ce" ("Caenorhabditis_elegans"), and etc.}

\item{initialIDs}{A single character value specifying the type of
initial identifiers for input phenotypeTS The valid terms need match with
the keytypes of species db such as keytypes(org.Hs.eg.db).}

\item{keepMultipleMappings}{A single logical value. If TRUE, the function
keeps the entries with multiple mappings (first mapping is kept). If FALSE,
the entries with multiple mappings will be discarded.}

\item{duplicateRemoverMethod}{A single character value specifying the method
to remove the duplicates. See help(duplicateRemover) for details.}

\item{orderAbsValue}{A single logical value indicating whether the values
should be converted to absolute values and then ordered (if TRUE), or
ordered as they are (if FALSE).}

\item{verbose}{A single logical value specifying to display detailed messages
(when verbose=TRUE) or not (when verbose=FALSE).}
}
\value{
In the end, this function will return an updated list of GSCA object.
}
\description{
This function will do basic preprocessing for each GSCA object of 'GSCABatch'.
}
\examples{
\dontrun{
data(d7, d13, d25)

## generate expInfor to describe the information of time series data
expInfor <- matrix(c("d7", "d13", "d25"), nrow = 3, ncol = 2,
                   byrow = FALSE, dimnames = list(NULL, c("ID", "Description")))

## package phenotypeTS into a list of phenotypes
datalist <- list(d7, d13, d25)
phenotypeTS <- lapply(datalist, function(x) {
                      tmp <- as.vector(x$neg.lfc)
                      names(tmp) <- x$id
                      tmp})

## set up a list of gene set collections
library(org.Hs.eg.db)
library(GO.db)
GO_BP <- GOGeneSets(species="Hs", ontologies=c("BP"))
ListGSC <- list(GO_BP=GO_BP)

## package hitsTS if you also want to do GSOA, otherwise ignore it
hitsTS <- lapply(datalist, function(x){
tmp <- x[x$neg.p.value < 0.01, "id"]
tmp})

## create an object of class GSCABatch with hitsTS
gscaTS <- new("GSCABatch", expInfor = expInfor, phenotypeTS = phenotypeTS,
                 listOfGeneSetCollections = ListGSC, hitsTS = hitsTS)

## preprocess GSCABatch
gscaTS1 <- preprocessGscaTS(gscaTS, species="Hs", initialIDs="SYMBOL",
                           keepMultipleMappings=TRUE, duplicateRemoverMethod="max",
                           orderAbsValue=FALSE)
gscaTS1
}
}
\seealso{
\code{\link[HTSanalyzeR2]{preprocess}}
}
