% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsca_report.R, R/nwa_report.R
\docType{methods}
\name{report,GSCA-method}
\alias{report,GSCA-method}
\alias{report,NWA-method}
\title{Write HTML reports for enrichment or network analyses}
\usage{
\S4method{report}{GSCA}(object, nodeOptions = list(),
  reportDir = "GSCAReport")

\S4method{report}{NWA}(object, nodeOptions = list(),
  reportDir = "NWAReport")
}
\arguments{
\item{object}{an object. When this function is implemented as the S4
method of class 'GSCA' or 'NWA', this argument is an object of class
'GSCA' or 'NWA'.}

\item{nodeOptions}{a list of interested gene set terms which can be edited in the shiny report such as
changing the shape of this set, etc.}

\item{reportDir}{a single character value specifying the directory to store reports. For default
the enrichment analysis reports will be stored in the directory called "GSCAReport"}
}
\description{
This is a generic function.
}
\details{
When implemented as the method of class GSCA or NWA, this function produces reports for
either the Gene Set Collection Analysis or the NetWork Analysis.
}
\examples{
# =======================================================
# GSCA class
## Not run:
library(org.Dm.eg.db)
library(GO.db)
## load data for enrichment analyses
data(data4enrich)
## select hits
hits <- names(data4enrich)[abs(data4enrich) > 2]
## set up a list of gene set collections
GO_MF <- GOGeneSets(species="Dm", ontologies=c("MF"))
ListGSC <- list(GO_MF=GO_MF)
## create an object of class 'GSCA'
gsca <- GSCA(listOfGeneSetCollections = ListGSC, geneList = data4enrich, hits = hits)
## print gsca
gsca
## do preprocessing
gsca <- preprocess(gsca, species="Dm", initialIDs="FLYBASECG", keepMultipleMappings=TRUE, duplicateRemoverMethod="max", orderAbsValue=FALSE)
## do hypergeometric tests and GSEA
gsca <- analyze(gsca, para=list(pValueCutoff=0.05, pAdjustMethod ="BH", nPermutations=100, minGeneSetSize=200, exponent=1))
summarize(gsca)
## append gene set terms to results
gsca <- appendGSTerms(gsca, goGSCs=c("GO_MF"), keggGSCs= NULL, msigdbGSCs=NULL)
## view an enrichment map for GSEA results
viewEnrichMap(gsca, gscs="GO_MF", allSig = F, ntop = 7)
## report for a GSCA object
report(gsca)
# ======================================================
# NWA class
# Conducting the preparation steps
data(xn)
data(data4enrich)
# Conducting one sample t-test & compute the p-values
test.stats <- cellHTS2OutputStatTests(cellHTSobject=xn,annotationColumn="GeneID", alternative="two.sided",tests=c("T-test"))
library(BioNet)
pvalues <- BioNet::aggrPvals(test.stats, order=2, plot=FALSE)
nwa <- NWA(pvalues=pvalues, phenotypes=data4enrich)
nwa <- preprocess(nwa, species="Dm", initialIDs="FLYBASECG", keepMultipleMappings=TRUE, duplicateRemoverMethod="max")
nwa_inter <- interactome(nwa, species="Dm", reportDir="biogrid", genetic=FALSE)
# Case1: Conducting the network analysis step
nwa_result <- analyze(nwa_inter, fdr=0.0001, species="Dm")
# Case2: Conducting the network analysis step(with the interactionMatrix)
data(nwam)
nwam_inter <- interactome(nwam, species="Dm", reportDir="biogrid", genetic=FALSE)
nwam_result <- analyze(nwam_inter, fdr=0.0001, species="Dm")
#report the results with shiny
report(nwa_result)
report(nwam_result)
}
