% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gscaTS.R
\name{appendGSTermsTS}
\alias{appendGSTermsTS}
\title{Append gene set terms to GSCA results for each GSCA object of Time-series data}
\usage{
appendGSTermsTS(gscaList, keggGSCs = NULL, goGSCs = NULL,
  msigdbGSCs = NULL)
}
\arguments{
\item{gscaList}{A named list of GSCA object.}

\item{keggGSCs}{A character vector of names of all KEGG gene set collections.}

\item{goGSCs}{A character vector of names of all GO gene set collections.}

\item{msigdbGSCs}{A character vector of names of all MSigDB gene set collections.}
}
\value{
In the end, this function will return an updated list of GSCA object.
}
\description{
For each GSCA object in 'gscaList', this function
finds corresponding annotation terms for GO, KEGG and MSigDB gene sets and
inserts a column named "Gene.Set.Term" to each data frame in the GSCA results.
}
\examples{
data(d7, d13, d25)

## generate expInfor to describe the information of time series data
expInfor <- matrix(c("d7", "d13", "d25"), nrow = 3, ncol = 2,
                   byrow = FALSE, dimnames = list(NULL, c("ID", "Description")))

## package phenotypeTS into a list of phenotypes
datalist <- list(d7, d13, d25)
phenotypeTS <- lapply(datalist, function(x) {
                      tmp <- as.vector(x$neg.lfc)
                      names(tmp) <- x$id
                      tmp})

## set up a list of gene set collections
library(org.Hs.eg.db)
library(GO.db)
GO_BP <- GOGeneSets(species="Hs", ontologies=c("BP"))
ListGSC <- list(GO_BP=GO_BP)

## package hitsTS if you also want to do GSOA, otherwise ignore it
hitsTS <- lapply(datalist, function(x){
tmp <- x[x$neg.p.value < 0.01, "id"]
tmp})

## create an object of class GSCABatch with hitsTS
gscaTS <- GSCABatch(expInfor = expInfor, phenotypeTS = phenotypeTS,
                 listOfGeneSetCollections = ListGSC, hitsTS = hitsTS)

## preprocess GSCABatch
gscaTS1 <- preprocessGscaTS(gscaTS, species="Hs", initialIDs="SYMBOL",
                           keepMultipleMappings=TRUE, duplicateRemoverMethod="max",
                           orderAbsValue=FALSE)

## support parallel calculation using doParallel package
if (requireNamespace("doParallel", quietly=TRUE)) {
doParallel::registerDoParallel(cores=2)
} else {
}

\dontrun{
## do hypergeometric tests and GSEA
gscaTS2 <- analyzeGscaTS(gscaTS1, para=list(pValueCutoff=0.05, pAdjustMethod="BH",
                        nPermutations=100, minGeneSetSize=100,
                        exponent=1), doGSOA = TRUE, doGSEA = TRUE)
head(gscaTS2[[1]]@result$GSEA.results$GO_BP, 3)

## append gene set terms to results

gscaTS3 <- appendGSTermsTS(gscaTS2, goGSCs=c("GO_BP"))
head(gscaTS3[[1]]@result$GSEA.results$GO_BP, 3)
}
}
\seealso{
\code{\link[HTSanalyzeR2]{appendGSTerms}}
}
