(function(undefined){"use strict";function deepCopy(o){var copy=Object.create(null);for(var i in o)"object"==typeof o[i]&&null!==o[i]?copy[i]=deepCopy(o[i]):"function"==typeof o[i]&&null!==o[i]?eval(" copy[i] = "+o[i].toString()):copy[i]=o[i];return copy}function find(a){var b,c,d;if(b=this.siblingEdgesIndex[a]){if(c=this.allNeighborsIndex.get(b.source).get(b.target),1===c.size){if(d=this.edges(c.keyList()[0]),"parallel"!==d.type)throw new Error('The sibling container must be of type "parallel", was '+d.type);if(d.siblings===undefined)throw new Error('The sibling container has no "siblings" key.');if(Object.keys(d.siblings).length<2)throw new Error("The sibling container must have more than one sibling, had "+Object.keys(d.siblings).length);if(d.siblings[a]===undefined)throw new Error("Sibling container found but the edge sibling is missing.");return d}if(c.size>1){var e;if(c.forEach(function(b,c){if("parallel"===b.type&&b.siblings!==undefined){if(!Object.keys(b.siblings).length)throw new Error("Edge sibling found but its container is missing.");b.siblings[a]!==undefined&&(e=b)}}),e!==undefined)return e;throw new Error("Edge sibling found but its container is missing.")}throw new Error("Edge sibling found but its container is missing.")}return this.edgesIndex.get(a)}function get(a){if(!arguments.length||a===undefined)return this.edgesArray.slice(0);if(arguments.length>1)throw new Error("Too many arguments. Use an array instead.");if("number"==typeof a||"string"==typeof a)return find.call(this,a);if(Array.isArray(a)){var b,c,d=[];for(b=0,c=a.length;c>b;b++){if("number"!=typeof a[b]&&"string"!=typeof a[b])throw new Error("Invalid argument: an edge id is not a string or a number, was "+a[b]);d.push(find.call(this,a[b]))}return d}throw new Error('Invalid argument: "v" is not a string or an array, was '+a)}function add(a,b){if(!a.siblings){var c=deepCopy(a);a.siblings={},a.siblings[a.id]=c,delete a.color,delete a.label,a.size=1,a.type="parallel",this.siblingEdgesIndex[c.id]=c}a.siblings[b.id]=b,this.siblingEdgesIndex[b.id]=b}function drop(a,b){if(delete a.siblings[b],delete this.siblingEdgesIndex[b],1===Object.keys(a.siblings).length){var c=a.siblings[Object.keys(a.siblings)[0]];this.dropEdge(a.id),this.addEdge(c),delete this.siblingEdgesIndex[a.id],delete this.siblingEdgesIndex[c.id]}}if("undefined"==typeof sigma)throw new Error("sigma is not declared");sigma.utils.pkg("sigma.plugins"),sigma.classes.graph.hasMethod("edgeSiblings")||sigma.classes.graph.addMethod("edgeSiblings",function(a){return get.call(this,a)}),sigma.classes.graph.hasMethod("addEdgeSibling")||sigma.classes.graph.addMethod("addEdgeSibling",function(a){if(0==arguments.length)throw new TypeError("Missing argument.");if(Object(a)!==a)throw new TypeError('Invalid argument: "edge" is not an object, was '+a);if("number"!=typeof a.id&&"string"!=typeof a.id)throw new TypeError('Invalid argument key: "edge.id" is not a string or a number, was '+a.id);if("number"!=typeof a.source&&"string"!=typeof a.source||!this.nodesIndex.get(a.source))throw new Error('Invalid argument key: "edge.source" is not an existing node id, was '+a.source);if("number"!=typeof a.target&&"string"!=typeof a.target||!this.nodesIndex.get(a.target))throw new Error('Invalid argument key: "edge.target" is not an existing node id, was '+a.target);if(this.edgesIndex.get(a.id))throw new Error('Invalid argument: an edge of id "'+a.id+'" already exists.');if(this.siblingEdgesIndex[a.id])throw new Error('Invalid argument: an edge sibling of id "'+a.id+'" already exists.');var b=this.allNeighborsIndex.get(a.source).get(a.target);if(b!==undefined&&b.size){var c=this.edges(b.get(b.keyList()[0]).id);add.call(this,c,a)}else this.addEdge(a);return this}),sigma.classes.graph.hasMethod("dropEdgeSibling")||sigma.classes.graph.addMethod("dropEdgeSibling",function(a){if(0==arguments.length)throw new TypeError("Missing argument.");if("number"!=typeof a&&"string"!=typeof a)throw new TypeError('Invalid argument: "id" is not a string or a number, was '+a);if(this.siblingEdgesIndex[a]){var b=find.call(this,a);drop.call(this,b,a)}else this.dropEdge(a);return this}),sigma.classes.graph.hasMethod("readWithSiblings")||sigma.classes.graph.addMethod("readWithSiblings",function(a){var b,c,d;for(c=a.nodes||[],b=0,d=c.length;d>b;b++)this.addNode(c[b]);for(c=a.edges||[],b=0,d=c.length;d>b;b++)this.addEdgeSibling(c[b]);return this}),sigma.classes.graph.addIndex("siblingEdgesIndex",{constructor:function(){this.siblingEdgesIndex=Object.create(null)}})}).call(this);
//# sourceMappingURL=sigma.plugins.edgeSiblings.min.js.map