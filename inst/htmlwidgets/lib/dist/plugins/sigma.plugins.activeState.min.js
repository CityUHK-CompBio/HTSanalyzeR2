(function(a){"use strict";function b(){f=new sigma.utils.map,g=new sigma.utils.map}function c(){null!==h&&j&&h.dispatchEvent("activeNodes")}function d(){null!==h&&j&&h.dispatchEvent("activeEdges")}function e(a){h=this,i=a.graph,null===f&&(f=new sigma.utils.map,i.nodes().forEach(function(a){a.active&&f.set(a.id,a)})),null===g&&(g=new sigma.utils.map,i.edges().forEach(function(a){a.active&&g.set(a.id,a)})),sigma.classes.dispatcher.extend(this),a.bind("kill",function(){h.kill()})}if("undefined"==typeof sigma)throw new Error("sigma is not declared");sigma.utils.pkg("sigma.plugins");var f,g,h=null,i=null,j=!0;b(),sigma.classes.graph.attach("addNode","sigma.plugins.activeState.addNode",function(a){a.active&&(f.set(a.id,this.nodesIndex.get(a.id)),c())}),sigma.classes.graph.attach("addEdge","sigma.plugins.activeState.addEdge",function(a){a.active&&(g.set(a.id,this.edgesIndex.get(a.id)),d())}),sigma.classes.graph.attachBefore("dropNode","sigma.plugins.activeState.dropNode",function(b){this.nodesIndex.get(b)!==a&&this.nodesIndex.get(b).active&&(f["delete"](b),c())}),sigma.classes.graph.attachBefore("dropEdge","sigma.plugins.activeState.dropEdge",function(b){this.edgesIndex.get(b)!==a&&this.edgesIndex.get(b).active&&(g["delete"](b),d())}),sigma.classes.graph.attachBefore("clear","sigma.plugins.activeState.clear",b),e.prototype.kill=function(){this.unbind(),f=null,g=null,i=null,h=null},e.prototype.addNodes=function(a){var b,d=f.size;if(arguments.length||i.nodes().forEach(function(a){a.hidden||(a.active=!0,f.set(a.id,a))}),arguments.length>1)throw new TypeError("Too many arguments. Use an array instead.");if("string"==typeof a||"number"==typeof a)b=i.nodes(a),b.hidden||(b.active=!0,f.set(a,b));else if(Array.isArray(a)){var e,g;for(e=0,g=a.length;g>e;e++){if("string"!=typeof a[e]&&"number"!=typeof a[e])throw new TypeError("Invalid argument: a node id is not a string or a number, was "+a[e]);b=i.nodes(a[e]),b.hidden||(b.active=!0,f.set(a[e],b))}}return d!=f.size&&c(),this},e.prototype.addEdges=function(a){var b,c=g.size;if(arguments.length||i.edges().forEach(function(a){a.hidden||(a.active=!0,g.set(a.id,a))}),arguments.length>1)throw new TypeError("Too many arguments. Use an array instead.");if("string"==typeof a||"number"==typeof a)b=i.edges(a),b.hidden||(b.active=!0,g.set(a,b));else if(Array.isArray(a)){var e,f;for(e=0,f=a.length;f>e;e++){if("string"!=typeof a[e]&&"number"!=typeof a[e])throw new TypeError("Invalid argument: an edge id is not a string or a number, was "+a[e]);b=i.edges(a[e]),b.hidden||(b.active=!0,g.set(a[e],b))}}return c!=g.size&&d(),this},e.prototype.dropNodes=function(a){var b=f.size;if(arguments.length||i.nodes().forEach(function(a){a.active=!1,f["delete"](a.id)}),arguments.length>1)throw new TypeError("Too many arguments. Use an array instead.");if("string"==typeof a||"number"==typeof a)i.nodes(a).active=!1,f["delete"](a);else if(Array.isArray(a)){var d,e;for(d=0,e=a.length;e>d;d++){if("string"!=typeof a[d]&&"number"!=typeof a[d])throw new TypeError("Invalid argument: a node id is not a string or a number, was "+a[d]);i.nodes(a[d]).active=!1,f["delete"](a[d])}}return b!=f.size&&c(),this},e.prototype.dropEdges=function(a){var b=g.size;if(arguments.length||i.edges().forEach(function(a){a.active=!1,g["delete"](a.id)}),arguments.length>1)throw new TypeError("Too many arguments. Use an array instead.");if("string"==typeof a||"number"==typeof a)i.edges(a).active=!1,g["delete"](a);else if(Array.isArray(a)){var c,e;for(c=0,e=a.length;e>c;c++){if("string"!=typeof a[c]&&"number"!=typeof a[c])throw new TypeError("Invalid argument: an edge id is not a string or a number, was "+a[c]);i.edges(a[c]).active=!1,g["delete"](a[c])}}return b!=g.size&&d(),this},e.prototype.addNeighbors=function(){if(!("adjacentNodes"in i))throw new Error("Missing method graph.adjacentNodes");var a=f.keyList();return f.forEach(function(b,c){i.adjacentNodes(c).forEach(function(b){b.hidden||a.push(b.id)})}),j=!1,this.dropNodes().dropEdges(),j=!0,this.addNodes(a),this},e.prototype.setNodesBy=function(a){var b=[];return i.nodes().forEach(function(c){a.call(i,c)&&(c.hidden||b.push(c.id))}),j=!1,this.dropNodes(),j=!0,this.addNodes(b),this},e.prototype.setEdgesBy=function(a){var b=[];return i.edges().forEach(function(c){a.call(i,c)&&(c.hidden||b.push(c.id))}),j=!1,this.dropEdges(),j=!0,this.addEdges(b),this},e.prototype.invertNodes=function(){var a=i.nodes().filter(function(a){return!a.hidden&&!a.active}).map(function(a){return a.id});return j=!1,this.dropNodes(),j=!0,a.length?this.addNodes(a):c(),this},e.prototype.invertEdges=function(){var a=i.edges().filter(function(a){return!a.hidden&&!a.active}).map(function(a){return a.id});return j=!1,this.dropEdges(),j=!0,a.length?this.addEdges(a):d(),this},e.prototype.nodes=function(){if(!f)return[];if(!sigma.forceES5)return f.valueList();var a=[];return f.forEach(function(b,c){a.push(b)}),a},e.prototype.edges=function(){if(!g)return[];if(!sigma.forceES5)return g.valueList();var a=[];return g.forEach(function(b,c){a.push(b)}),a},e.prototype.nbNodes=function(){return f?f.size:0},e.prototype.nbEdges=function(){return g?g.size:0},sigma.plugins.activeState=function(a){return h||(h=new e(a)),h},sigma.plugins.killActiveState=function(){h instanceof e&&(h.kill(),h=null)}}).call(this);
//# sourceMappingURL=sigma.plugins.activeState.min.js.map